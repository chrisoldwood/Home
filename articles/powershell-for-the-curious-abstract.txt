PowerShell was unleashed on Windows developers and administrators back in 2006 in an effort to fill the long standing Windows CLI void. Fast forward 10 years and the shell-come-scripting language can now be found on macOS and various flavours of Linux as part of Microsoft's new found love for Open Source and cross-platform tooling.

However, unlike traditional shells which traffic in lines of text, PowerShell leverages the .Net Core based runtime and allows whole objects (generated by its own 'cmdlets') to be passed through pipelines as well as simple lines of text generated by the vast backlog of existing command line tools we all know and love. As a consequence this shell / scripting language hybridization means that administrators and developers can solve the same problems using the paradigm they are most comfortable with. Throw in support for remoting, modules, a package manager, the native .Net Core libraries, etc. and you have a mature ecosystem for writing everything from cryptic one-liners to full-blown applications. 

If PowerShell has entered your conscious incompetence and you're curious about what it might offer this talk introduces you to the basics concepts and hopefully gives you enough of a grounding to help you decide if it's worth exploring further.
